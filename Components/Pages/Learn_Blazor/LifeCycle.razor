@page "/lifecycle"

<PageTitle>Life Cycle</PageTitle>

<h3 class="text-success">Blazor Life Cycle</h3>

<p role="status">Current count: @currentCount</p>
<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<div class="border">
    <_LifeCycleChildComponent CountValue="@currentCount"></_LifeCycleChildComponent>
</div>

@foreach (var item in EventType)
{
    <p>@item</p>
    <hr />
}

@code {
    private int currentCount = 0;

    List<string> EventType = new List<string>();

    private void IncrementCount()
    {
        currentCount++;
    }

    protected override void OnInitialized()
    {
        EventType.Add("OnInitialized called");
    }

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000); // Simulating async work
        EventType.Add("OnInitializedAsync called");
    }

    protected override void OnParametersSet()
    {
        EventType.Add("OnParametersSet called");
    }

    protected override async Task OnParametersSetAsync()
    {
        await Task.Delay(1000); // Simulating async work
        EventType.Add("OnParametersSetAsync called");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            currentCount = 100;
        }
        else
        {
            currentCount = 200;
        }
        EventType.Add("OnAfterRender called");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await Task.Delay(1000); // Simulating async work
        EventType.Add("OnAfterRenderAsync called");
    }
}
